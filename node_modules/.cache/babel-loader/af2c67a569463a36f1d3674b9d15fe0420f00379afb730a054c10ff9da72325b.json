{"ast":null,"code":"// import React, { useContext, useEffect, useState } from 'react';\n// import { useCart } from '../contexts/CartContext';\n// import axios from 'axios';\n// import QRCode from 'qrcode.react';\n// import io from 'socket.io-client';\n// import { useNavigate } from 'react-router-dom';\n// import '../styles/CartPage.css';\n\n// const CartPage = () => {\n//   const { cartItems, removeFromCart, clearCart } = useCart();\n//   const [invoiceUrl, setInvoiceUrl] = useState('');\n//   const [invoicePaid, setInvoicePaid] = useState(false);\n//   const [total, setTotal] = useState('0.00');\n//   const [orderId, setOrderId] = useState('');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const totalAmount = cartItems.reduce((total, item) => {\n//       return total + (item.price * item.quantity);\n//     }, 0).toFixed(2);\n//     setTotal(totalAmount);\n//   }, [cartItems]);\n\n//   const handleCheckout = async () => {\n//     try {\n//       const response = await axios.post('http://localhost:5000/create-invoice', {\n//         price: total,\n//         currency: 'USD',\n//       });\n//       setInvoiceUrl(response.data.paymentLink);\n//       setOrderId(response.data.invoiceId);  // Save the order ID\n//       console.log('Invoice URL:', response.data.paymentLink);\n//     } catch (error) {\n//       console.error('Error creating invoice:', error);\n//     }\n//   };\n\n//   const handleInvoicePaid = (invoiceId) => {\n//     setInvoicePaid(true);\n//     setOrderId(invoiceId);  // Save the order ID\n//   };\n\n//   useEffect(() => {\n//     const socket = io('http://localhost:5000');\n//     socket.on('paymentConfirmed', ({ invoiceId }) => {\n//       handleInvoicePaid(invoiceId);\n//     });\n\n//     return () => {\n//       socket.disconnect();\n//     };\n//   }, []);\n\n//   const handleBackToHome = () => {\n//     clearCart();\n//     navigate('/');\n//   };\n\n//   return (\n//     <div className=\"cart-page\">\n//       <h2>Shopping Cart</h2>\n//       {cartItems.map((item) => (\n//         <div key={item.id} className=\"cart-item\">\n//           <img src={item.image} alt={item.name} />\n//           <div className=\"cart-item-info\">\n//             <h3>{item.name}</h3>\n//             <p>${item.price.toFixed(2)}</p>\n//             <p>Quantity: {item.quantity}</p>\n//           </div>\n//           <button onClick={() => removeFromCart(item.id)} className=\"btn-primary\">Remove</button>\n//         </div>\n//       ))}\n//       <div className=\"total-checkout-container\">\n//         <div className=\"total\">\n//           <h3>Total: ${total}</h3>\n//         </div>\n//         {!invoiceUrl && !invoicePaid && (\n//           <button onClick={handleCheckout} className=\"btn-primary\">Proceed to Checkout</button>\n//         )}\n//       </div>\n//       {invoiceUrl && !invoicePaid && (\n//         <div className=\"invoice-details\">\n//           <p>Invoice created! Pay using the link below:</p>\n//           <a href={invoiceUrl} target=\"_blank\" rel=\"noopener noreferrer\">{invoiceUrl}</a>\n//           <p>Or scan the QR code below:</p>\n//           <QRCode value={invoiceUrl} />\n//         </div>\n//       )}\n//       {invoicePaid && (\n//         <div className=\"invoice-details\">\n//           <p>Invoice paid successfully!</p>\n//           <p>Your order number is: {orderId}</p>\n//           <button onClick={handleBackToHome} className=\"btn-primary\">Back to Home</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CartPage;","map":{"version":3,"names":[],"sources":["/Users/marwal/Desktop/Code/ChatGPT/e-commerce/src/components/CartPage.js"],"sourcesContent":["// import React, { useContext, useEffect, useState } from 'react';\n// import { useCart } from '../contexts/CartContext';\n// import axios from 'axios';\n// import QRCode from 'qrcode.react';\n// import io from 'socket.io-client';\n// import { useNavigate } from 'react-router-dom';\n// import '../styles/CartPage.css';\n\n// const CartPage = () => {\n//   const { cartItems, removeFromCart, clearCart } = useCart();\n//   const [invoiceUrl, setInvoiceUrl] = useState('');\n//   const [invoicePaid, setInvoicePaid] = useState(false);\n//   const [total, setTotal] = useState('0.00');\n//   const [orderId, setOrderId] = useState('');\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const totalAmount = cartItems.reduce((total, item) => {\n//       return total + (item.price * item.quantity);\n//     }, 0).toFixed(2);\n//     setTotal(totalAmount);\n//   }, [cartItems]);\n\n//   const handleCheckout = async () => {\n//     try {\n//       const response = await axios.post('http://localhost:5000/create-invoice', {\n//         price: total,\n//         currency: 'USD',\n//       });\n//       setInvoiceUrl(response.data.paymentLink);\n//       setOrderId(response.data.invoiceId);  // Save the order ID\n//       console.log('Invoice URL:', response.data.paymentLink);\n//     } catch (error) {\n//       console.error('Error creating invoice:', error);\n//     }\n//   };\n\n//   const handleInvoicePaid = (invoiceId) => {\n//     setInvoicePaid(true);\n//     setOrderId(invoiceId);  // Save the order ID\n//   };\n\n//   useEffect(() => {\n//     const socket = io('http://localhost:5000');\n//     socket.on('paymentConfirmed', ({ invoiceId }) => {\n//       handleInvoicePaid(invoiceId);\n//     });\n\n//     return () => {\n//       socket.disconnect();\n//     };\n//   }, []);\n\n//   const handleBackToHome = () => {\n//     clearCart();\n//     navigate('/');\n//   };\n\n//   return (\n//     <div className=\"cart-page\">\n//       <h2>Shopping Cart</h2>\n//       {cartItems.map((item) => (\n//         <div key={item.id} className=\"cart-item\">\n//           <img src={item.image} alt={item.name} />\n//           <div className=\"cart-item-info\">\n//             <h3>{item.name}</h3>\n//             <p>${item.price.toFixed(2)}</p>\n//             <p>Quantity: {item.quantity}</p>\n//           </div>\n//           <button onClick={() => removeFromCart(item.id)} className=\"btn-primary\">Remove</button>\n//         </div>\n//       ))}\n//       <div className=\"total-checkout-container\">\n//         <div className=\"total\">\n//           <h3>Total: ${total}</h3>\n//         </div>\n//         {!invoiceUrl && !invoicePaid && (\n//           <button onClick={handleCheckout} className=\"btn-primary\">Proceed to Checkout</button>\n//         )}\n//       </div>\n//       {invoiceUrl && !invoicePaid && (\n//         <div className=\"invoice-details\">\n//           <p>Invoice created! Pay using the link below:</p>\n//           <a href={invoiceUrl} target=\"_blank\" rel=\"noopener noreferrer\">{invoiceUrl}</a>\n//           <p>Or scan the QR code below:</p>\n//           <QRCode value={invoiceUrl} />\n//         </div>\n//       )}\n//       {invoicePaid && (\n//         <div className=\"invoice-details\">\n//           <p>Invoice paid successfully!</p>\n//           <p>Your order number is: {orderId}</p>\n//           <button onClick={handleBackToHome} className=\"btn-primary\">Back to Home</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default CartPage;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}